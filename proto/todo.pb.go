// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo.proto

package Todo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Task struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{1}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Task) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TaskResponse struct {
	Tasks                []*Task  `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskResponse) Reset()         { *m = TaskResponse{} }
func (m *TaskResponse) String() string { return proto.CompactTextString(m) }
func (*TaskResponse) ProtoMessage()    {}
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{2}
}

func (m *TaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskResponse.Unmarshal(m, b)
}
func (m *TaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskResponse.Marshal(b, m, deterministic)
}
func (m *TaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskResponse.Merge(m, src)
}
func (m *TaskResponse) XXX_Size() int {
	return xxx_messageInfo_TaskResponse.Size(m)
}
func (m *TaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskResponse proto.InternalMessageInfo

func (m *TaskResponse) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type NewTaskResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewTaskResponse) Reset()         { *m = NewTaskResponse{} }
func (m *NewTaskResponse) String() string { return proto.CompactTextString(m) }
func (*NewTaskResponse) ProtoMessage()    {}
func (*NewTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{3}
}

func (m *NewTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTaskResponse.Unmarshal(m, b)
}
func (m *NewTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTaskResponse.Marshal(b, m, deterministic)
}
func (m *NewTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTaskResponse.Merge(m, src)
}
func (m *NewTaskResponse) XXX_Size() int {
	return xxx_messageInfo_NewTaskResponse.Size(m)
}
func (m *NewTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewTaskResponse proto.InternalMessageInfo

func (m *NewTaskResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RemoveTaskRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTaskRequest) Reset()         { *m = RemoveTaskRequest{} }
func (m *RemoveTaskRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveTaskRequest) ProtoMessage()    {}
func (*RemoveTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{4}
}

func (m *RemoveTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTaskRequest.Unmarshal(m, b)
}
func (m *RemoveTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTaskRequest.Marshal(b, m, deterministic)
}
func (m *RemoveTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTaskRequest.Merge(m, src)
}
func (m *RemoveTaskRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveTaskRequest.Size(m)
}
func (m *RemoveTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTaskRequest proto.InternalMessageInfo

func (m *RemoveTaskRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "Todo.Empty")
	proto.RegisterType((*Task)(nil), "Todo.Task")
	proto.RegisterType((*TaskResponse)(nil), "Todo.TaskResponse")
	proto.RegisterType((*NewTaskResponse)(nil), "Todo.NewTaskResponse")
	proto.RegisterType((*RemoveTaskRequest)(nil), "Todo.RemoveTaskRequest")
}

func init() { proto.RegisterFile("todo.proto", fileDescriptor_0e4b95d0c4e09639) }

var fileDescriptor_0e4b95d0c4e09639 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x1b, 0x4d, 0x8d, 0x7d, 0x15, 0xc4, 0xb9, 0xb8, 0xf4, 0x14, 0x16, 0xc1, 0x82, 0x10,
	0xa4, 0xf6, 0x2f, 0x78, 0x13, 0x0f, 0x4b, 0xff, 0x40, 0x6c, 0x06, 0x29, 0x25, 0x4e, 0x74, 0x76,
	0x15, 0xff, 0x86, 0xbf, 0x58, 0xb2, 0xdb, 0x62, 0xd4, 0xde, 0x76, 0x76, 0xde, 0xe3, 0x7d, 0x6f,
	0x00, 0x2f, 0x8d, 0x54, 0xdd, 0x9b, 0x78, 0xa1, 0x7c, 0x25, 0x8d, 0xd8, 0x02, 0xe3, 0xfb, 0xb6,
	0xf3, 0x9f, 0x76, 0x89, 0x7c, 0x55, 0xeb, 0x96, 0x08, 0x79, 0x08, 0x9b, 0xc6, 0x64, 0x65, 0x36,
	0x9f, 0xb8, 0xf8, 0x26, 0x83, 0xa2, 0x65, 0xd5, 0xfa, 0x99, 0xcd, 0x51, 0xfc, 0xde, 0x8f, 0xf6,
	0x16, 0x67, 0xbd, 0xcb, 0xb1, 0x76, 0xf2, 0xa2, 0x4c, 0x25, 0xc6, 0xbe, 0xd6, 0xad, 0x9a, 0xac,
	0x3c, 0x9e, 0x4f, 0x17, 0xa8, 0xfa, 0x90, 0x2a, 0x4a, 0xd2, 0xc2, 0xde, 0xe0, 0xfc, 0x91, 0x3f,
	0x7e, 0x99, 0x0c, 0x0a, 0x0d, 0xeb, 0x35, 0xab, 0xc6, 0xd4, 0x53, 0xb7, 0x1f, 0xed, 0x35, 0x2e,
	0x1c, 0xb7, 0xf2, 0xce, 0x49, 0xff, 0x1a, 0x58, 0xfd, 0x21, 0xc2, 0xc5, 0x57, 0x86, 0xd8, 0x87,
	0x2a, 0x4c, 0x1e, 0x36, 0xea, 0x7b, 0xbd, 0xd2, 0x34, 0xc5, 0xc7, 0x82, 0x33, 0x1a, 0xb0, 0xec,
	0x92, 0xed, 0x88, 0xae, 0x50, 0xec, 0x70, 0x68, 0x00, 0x3b, 0x1b, 0x3a, 0xed, 0x88, 0x96, 0xc0,
	0x0f, 0x07, 0x5d, 0xa6, 0xe5, 0x3f, 0xb2, 0x3f, 0xae, 0xa7, 0x93, 0x78, 0xe8, 0xbb, 0xef, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xb3, 0x66, 0x78, 0x49, 0x76, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoClient is the client API for Todo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoClient interface {
	ListTasks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TaskResponse, error)
	NewTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Empty, error)
	RemoveTask(ctx context.Context, in *RemoveTaskRequest, opts ...grpc.CallOption) (*Empty, error)
}

type todoClient struct {
	cc *grpc.ClientConn
}

func NewTodoClient(cc *grpc.ClientConn) TodoClient {
	return &todoClient{cc}
}

func (c *todoClient) ListTasks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TaskResponse, error) {
	out := new(TaskResponse)
	err := c.cc.Invoke(ctx, "/Todo.Todo/ListTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) NewTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Todo.Todo/NewTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) RemoveTask(ctx context.Context, in *RemoveTaskRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Todo.Todo/RemoveTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoServer is the server API for Todo service.
type TodoServer interface {
	ListTasks(context.Context, *Empty) (*TaskResponse, error)
	NewTask(context.Context, *Task) (*Empty, error)
	RemoveTask(context.Context, *RemoveTaskRequest) (*Empty, error)
}

func RegisterTodoServer(s *grpc.Server, srv TodoServer) {
	s.RegisterService(&_Todo_serviceDesc, srv)
}

func _Todo_ListTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).ListTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Todo.Todo/ListTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).ListTasks(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_NewTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).NewTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Todo.Todo/NewTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).NewTask(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_RemoveTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).RemoveTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Todo.Todo/RemoveTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).RemoveTask(ctx, req.(*RemoveTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Todo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Todo.Todo",
	HandlerType: (*TodoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTasks",
			Handler:    _Todo_ListTasks_Handler,
		},
		{
			MethodName: "NewTask",
			Handler:    _Todo_NewTask_Handler,
		},
		{
			MethodName: "RemoveTask",
			Handler:    _Todo_RemoveTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo.proto",
}
